{
  "env": {
    "node": true,
    "jest": true,
    "es2021": true,
    "jest/globals": true
  },
  "settings": {
    "jest": {
      "version": "detect"
    },
    "import/resolver": {
      "typescript": {},
      "node": {
        "extensions": [".js", ".ts"]
      }
    }
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 13,
    "sourceType": "module",
    "project": ["./tsconfig.eslint.json"]
  },
  "extends": [
    "prettier",
    "plugin:jest/style",
    "plugin:jest/recommended",
    "plugin:unicorn/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@darraghor/nestjs-typed/no-swagger",
    "plugin:@darraghor/nestjs-typed/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "plugins": [
    "jest",
    "import",
    "prettier",
    "import-helpers",
    "jest-formatting",
    "@typescript-eslint",
    "@darraghor/nestjs-typed",
    "eslint-plugin-import-helpers"
  ],
  "overrides": [
    {
      "files": ["main.ts"],
      "rules": {
        "unicorn/prefer-top-level-await": "off",
        "@typescript-eslint/no-floating-promises": "off"
      }
    },
    {
      "files": ["prisma.service.ts"],
      "rules": {
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/no-misused-promises": "off"
      }
    },
    {
      "files": ["test/**"],
      "rules": {
        "jest/expect-expect": "off"
      }
    },
    {
      "files": ["jest.config.ts", "commitlint.config.ts"],
      "rules": {
        "import/no-default-export": "off"
      }
    },
    {
      "files": ["**.js"],
      "rules": {
        "no-undef": "off",
        "unicorn/prefer-module": "off",
        "@typescript-eslint/no-var-requires": "off"
      }
    },
    {
      "files": ["spec.ts", "spec.tsx", "test.ts", "test.tsx"],
      "rules": {
        "unicorn/prefer-module": "off",
        "@typescript-eslint/no-var-requires": "off"
      }
    },
    {
      "files": "next-seo.config.ts",
      "rules": {
        "unicorn/filename-case": "off"
      }
    },
    {
      "files": ["**.d.ts"],
      "rules": {
        "@typescript-eslint/naming-convention": "off",
        "@typescript-eslint/no-empty-interface": "off",
        "unicorn/filename-case": [
          "error",
          {
            "case": "kebabCase"
          }
        ]
      }
    },
    {
      "files": ["src/dtos/*"],
      "rules": {
        "unicorn/filename-case": "off",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "interface",
            "format": ["PascalCase"],
            "custom": {
              "regex": "[A-Z]*DTO$",
              "match": true
            }
          },
          {
            "selector": "typeAlias",
            "format": ["PascalCase"],
            "custom": {
              "regex": "[A-Z]*DTO$",
              "match": true
            }
          }
        ]
      }
    }
  ],
  "rules": {
    "prettier/prettier": "error",
    "jest/valid-expect": "error",
    "jest/no-focused-tests": "error",
    "jest/no-identical-title": "error",
    "import/no-default-export": "error",
    "jest-formatting/padding-around-test-blocks": "error",
    "jest-formatting/padding-around-describe-blocks": "error",
    "@typescript-eslint/consistent-indexed-object-style": "error",
    "jest/no-disabled-tests": "warn",
    "jest/prefer-to-have-length": "warn",
    "sort-imports": "off",
    "unicorn/no-null": "off",
    "node/no-missing-import": "off",
    "node/no-unpublished-import": "off",
    "import/prefer-default-export": "off",
    "quote-props": ["error", "consistent-as-needed"],
    "arrow-body-style": ["error", "as-needed"],
    "import/no-duplicates": [
      "error",
      {
        "prefer-inline": true
      }
    ],
    "import/consistent-type-specifier-style": ["error", "prefer-inline"],
    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": true
      }
    ],
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "prefer": "type-imports"
      }
    ],
    "unicorn/prevent-abbreviations": [
      "error",
      {
        "replacements": {
          "props": {
            "properties": false
          },
          "env": {
            "environment": false
          },
          "ref": {
            "reference": false
          },
          "args": {
            "arguments": false
          }
        }
      }
    ],
    "unicorn/filename-case": [
      "error",
      {
        "cases": {
          "kebabCase": true,
          "pascalCase": true
        }
      }
    ],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": "return"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "try"
      },
      {
        "blankLine": "always",
        "prev": "try",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "block-like"
      },
      {
        "blankLine": "always",
        "prev": "block-like",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "throw"
      },
      {
        "blankLine": "always",
        "prev": "var",
        "next": "*"
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase", "PascalCase", "snake_case", "UPPER_CASE"],
        "filter": {
          "regex": "^_.*$",
          "match": false
        }
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE"]
      },
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": true
        }
      },
      {
        "selector": "typeAlias",
        "format": ["PascalCase"],
        "custom": {
          "regex": "[A-Z]*Props$",
          "match": true
        }
      },
      {
        "selector": "memberLike",
        "modifiers": ["private"],
        "format": ["camelCase"],
        "leadingUnderscore": "forbid"
      },
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "should", "has", "can", "did", "will"]
      }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "ts": "never"
      }
    ],
    "import-helpers/order-imports": [
      "warn",
      {
        "newlinesBetween": "always",
        "groups": [
          "/node/",
          "/@nestjs/",
          "/^@testing-library/",
          "/^supertest/",
          "module",
          "/^app/",
          "/^infra/",
          "/^services/",
          "/^lib/",
          "/^functions/",
          "/^dtos/",
          "/^helpers/",
          "/^utils/",
          "/^constants/",
          "/^styles/",
          ["parent", "sibling", "index"]
        ],
        "alphabetize": {
          "order": "asc",
          "ignoreCase": true
        }
      }
    ]
  }
}
