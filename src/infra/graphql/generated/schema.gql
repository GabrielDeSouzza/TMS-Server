# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AuthInput {
  email: String!
  password: String!
}

type AuthModel {
  email: String!
  id: String!
  name: String!
  token: String!
  username: String!
}

type CompanyVehicleIModel {
  Vehicle: VehicleCarModel!
  created_at: Timestamp!
  created_by: String!
  id: String!
  updated_at: Timestamp!
  updated_by: String!
  vehicle_id: String!
}

input CompanyVehicleInput {
  Vehicle: VehicleInput!
}

input CompanyVehicleUpdateInput {
  Vehicle: VehicleUpdateInput!
}

input ContractOutsoucedDriverUpdateInput {
  cpf: String
  end_at: Timestamp
  id: String
  outsourced_driver_id: String
  situation: String
  start_at: Timestamp
  type: String
}

type ContractOutsourcedDriverRefencesModel {
  cpf: String!
  created_at: Timestamp!
  created_by: String!
  end_at: Timestamp!
  id: String!
  situation: String!
  start_at: Timestamp!
  type: String!
  updated_at: Timestamp!
  updated_by: String!
}

input ContractOutsourcedDriverReferecesInput {
  cpf: String!
  end_at: Timestamp!
  id: String
  situation: String!
  start_at: Timestamp!
  type: String!
}

type Mutation {
  createCompanyVehicle(CompanyVehicleInput: CompanyVehicleInput!): CompanyVehicleIModel!
  createOutsourcedDriver(outsourcedDriver: OutsourcedDriverInput!): OutsourcedDriverModel!
  createOutsourcedVehicle(OutsourcedVehicleInput: OutsourcedVehicleInput!): OutsourcedVehicleIModel!
  createOwnDriver(ownDriverInput: OwnDriverInput!): OwnDriverModel!
  createUSer(createUserInput: UserInput!): UserModel!
  createVehicle(vehicleInput: VehicleInput!): VehicleCarModel!
  createVehicleBodywork(vehicleBodyworkInput: VehicleBodyworkInput!): VehicleBodyworkModel!
  createVehicleBrand(vehicleBrandInput: VehicleBrandInput!): VehicleBrandModel!
  createVehicleModel(vehicleModelInput: VehicleModelInput!): VehicleModelGraphql!
  createVehicleType(vehicleTypeCreate: VehicleTypeInput!): VehicleTypeModel!
  login(loginData: AuthInput!): AuthModel!
  updateOutsourcedDriver(id: String!, outsourcedDriver: OutsourcedDriverUpdateInput!): OutsourcedDriverModel!
  updateOwnDriver(id: String!, ownDriverUpdate: OwnDriverUpdate!): OwnDriverModel!
  updateUser(id: String!, userUpate: UserUpdateInput!): UserModel!
  updateVehicle(id: String!, vehicleInput: VehicleUpdateInput!): VehicleCarModel!
  updateVehicleBodywork(id: String!, vehicleBodyworkInput: VehicleBodyworkInput!): VehicleBodyworkModel!
  updatedCompanyVehicle(id: String!, outsourced: CompanyVehicleUpdateInput!): CompanyVehicleIModel!
  updatedOutsourcedVehicle(id: String!, outsourced: OutsourcedVehicleUpdateInput!): OutsourcedVehicleIModel!
  updatedVehicleBrand(id: String!, vehicleBrandUpdate: VehicleBrandUpdateInput!): VehicleBrandModel!
  updatedVehicleModel(id: String!, vehicleModelUpdate: VehicleModelInput!): VehicleModelGraphql!
  updatedVehicleType(id: String!, vehicleTypeInput: VehicleTypeUdateInput!): VehicleTypeModel!
}

input NaturalPersonInput {
  address_number: String!
  cep: String!
  city: String!
  complement: String
  cpf: String!
  date_birth: Timestamp!
  email: String!
  first_phone: String!
  gender: String!
  name: String!
  nationality: String!
  neighborhood: String!
  public_place: String!
  rg: String!
  second_phone: String
  third_phone: String
  uf: String!
}

type NaturalPersonModel {
  address_number: String!
  cep: String!
  city: String!
  complement: String
  cpf: String!
  date_birth: Timestamp!
  email: String!
  first_phone: String!
  gender: String!
  id: String!
  name: String!
  nationality: String!
  neighborhood: String!
  public_place: String!
  rg: String!
  second_phone: String
  third_phone: String
  uf: String!
}

input NaturalPersonUpdate {
  address_number: String
  cep: String
  city: String
  complement: String
  cpf: String
  date_birth: Timestamp
  email: String
  first_phone: String
  gender: String
  name: String
  nationality: String
  neighborhood: String
  public_place: String
  rg: String
  second_phone: String
  third_phone: String
  uf: String
}

input OutsourcedDriverInput {
  ContractOutsourcedDriver: ContractOutsourcedDriverReferecesInput!
  NaturalPerson: NaturalPersonInput!
  OutsourcedVehicle: OutsourcedVehicleInput
  cnh: String!
  cnh_category: String!
  cnh_expiration: Timestamp!
  company_vehicle: Boolean!
  course_mopp: Boolean!
}

type OutsourcedDriverModel {
  ContractOutsourcedDriver: [ContractOutsourcedDriverRefencesModel!]!
  CreatedUser: UserModelRefereces!
  NaturalPerson: NaturalPersonModel!
  OutsourcedVehicle: OutsourcedVehicleIModel
  UpdatedUser: UserModelRefereces!
  cnh: String!
  cnh_category: String!
  cnh_expiration: Timestamp!
  company_vehicle: Boolean!
  course_mopp: Boolean!
  createdUser: UserModelRefereces!
  created_by: String!
  id: String!
  natural_person_id: String!
  outsourced_vehicle_id: String!
  updatedUser: UserModelRefereces!
  updated_by: String!
}

input OutsourcedDriverUpdateInput {
  ContractOutsourcedDriver: ContractOutsoucedDriverUpdateInput
  NaturalPerson: NaturalPersonUpdate
  OutsourcedVehicle: OutsourcedVehicleUpdateInput
  cnh: String
  cnh_category: String
  cnh_expiration: Timestamp
  company_vehicle: Boolean
  course_mopp: Boolean
}

type OutsourcedVehicleIModel {
  CreatedUser: UserModelRefereces!
  UpdatedUser: UserModelRefereces!
  Vehicle: VehicleCarModel!
  created_at: Timestamp!
  id: String!
  updated_at: Timestamp!
  vehicle_id: String!
}

input OutsourcedVehicleInput {
  Vehicle: VehicleInput!
}

input OutsourcedVehicleUpdateInput {
  Vehicle: VehicleUpdateInput
}

input OwnDriverInput {
  NaturalPerson: NaturalPersonInput!
  cnh: String!
  cnh_category: String!
  cnh_expiration: Timestamp!
  company_vehicle: Boolean!
  course_mopp: Boolean!
}

type OwnDriverModel {
  NaturalPerson: NaturalPersonModel!
  cnh: String!
  cnh_category: String!
  cnh_expiration: Timestamp!
  company_vehicle: Boolean!
  course_mopp: Boolean!
  cpf: String!
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  id: String!
  natural_person_id: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
}

input OwnDriverUpdate {
  NaturalPersonUpdate: NaturalPersonUpdate!
  cnh: String
  cnh_category: String
  cnh_expiration: Timestamp
  company_vehicle: Boolean
  course_mopp: Boolean
}

type Query {
  getAllCompanyVehicle: [CompanyVehicleIModel!]!
  getAllOutsourcedDriver: [OutsourcedDriverModel!]!
  getAllOutsourcedVehicle: [OutsourcedVehicleIModel!]!
  getAllOwnDriver: [OwnDriverModel!]!
  getAllVehicle: [VehicleCarModel!]!
  getAllVehicleBodywork: [VehicleBodyworkModel!]
  getAllVehicleBrand: [VehicleBrandModel!]!
  getAllVehicleModel: [VehicleModelGraphql!]
  getAllVehicleTypes: [VehicleTypeModel!]
  getCompanyVehicle(id: String!): CompanyVehicleIModel!
  getOutsourcedDriver(id: String!): OutsourcedDriverModel!
  getOutsourcedVehicle(id: String!): OutsourcedVehicleIModel!
  getOwnDriver(id: String!): OwnDriverModel!
  getVehicle(id: String, plate: String): VehicleCarModel!
  getVehicleBodyworkModel(id: String!): VehicleBodyworkModel!
  getVehicleBrand(id: String!): VehicleBrandModel!
  getVehicleModel(id: String!): VehicleModelGraphql!
  getVehicleType(id: String!): VehicleTypeModel!
  user(email: String, id: String): UserModel!
  users: [UserModel!]!
}

enum ROLE {
  ADMIN
  CLIENT
  USER
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

input UserInput {
  email: String!
  name: String!
  password: String!
  role: ROLE!
  username: String!
}

type UserModel {
  created_at: Timestamp
  email: String!
  id: String!
  name: String!
  password: String!
  role: ROLE!
  updated_at: Timestamp
  username: String!
}

type UserModelRefereces {
  email: String!
  id: String!
  name: String!
  username: String!
}

input UserUpdateInput {
  email: String
  name: String
  password: String
  role: ROLE
  username: String
}

input VehicleBodyworkInput {
  axles: Int!
  created_by: String!
  mass: Float!
  name: String!
  updated_by: String!
  volume: Float!
}

type VehicleBodyworkModel {
  CreatedUser: UserModelRefereces!
  UpdatedUser: UserModelRefereces!
  VehicleTypeContainsBody: [VehicleTypeContainsBodyModel!]
  axles: Float!
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  id: String!
  mass: Float!
  name: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
  volume: Float!
}

type VehicleBodyworkModelReferences {
  axles: Float!
  id: String!
  mass: Float!
  name: String!
  volume: Float!
}

input VehicleBrandInput {
  created_by: String!
  name: String!
  updated_by: String!
}

type VehicleBrandModel {
  VehicleModels: VehicleModelGraphql
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  id: String!
  name: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
}

type VehicleBrandReferences {
  id: String!
  name: String!
}

input VehicleBrandUpdateInput {
  created_by: String
  name: String
  updated_by: String
}

type VehicleCarModel {
  VehicleBrand: VehicleBrandReferences!
  VehicleModel: VehicleModelReferences!
  VehicleType: VehicleTypeReferences!
  color: String!
  createdUser: UserModelRefereces!
  id: String!
  model_id: String!
  plate: String!
  renavam: String!
  rntrc_expiration: String!
  updatedUser: UserModelRefereces!
  year: String!
}

input VehicleInput {
  color: String!
  model_id: String!
  plate: String!
  renavam: String!
  rntrc_expiration: String!
  year: String!
}

type VehicleModelGraphql {
  VehicleBrand: VehicleBrandReferences!
  VehicleType: VehicleTypeReferences!
  axles: Int!
  brand_id: String!
  capacity_max: Float!
  capacity_per_axle: Int!
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  id: String!
  name: String!
  type_id: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
  weight: Float!
}

input VehicleModelInput {
  axles: Float!
  brand_id: String!
  capacity_max: Float!
  capacity_per_axle: Int!
  created_by: String!
  name: String!
  type_id: String!
  updated_by: String!
  weight: Float!
}

type VehicleModelReferences {
  axles: Int!
  brand_id: String!
  capacity_max: Float!
  capacity_per_axle: Int!
  id: String!
  name: String!
  type_id: String!
  weight: Float!
}

type VehicleTypeContainsBodyModel {
  VehicleBodywork: [VehicleBodyworkModelReferences!]!
  created_at: Timestamp!
  created_by: String!
  id: String!
  updated_at: Timestamp!
  updated_by: String!
  vehicle_bodywork_id: String!
  vehicle_type_id: String!
}

input VehicleTypeInput {
  bodyWork: Boolean!
  body_work_id: [String!]
  created_by: String!
  name: String!
  updated_by: String!
}

type VehicleTypeModel {
  VehicleModels: VehicleModelGraphql
  VehicleTypeContainsBody: [VehicleTypeContainsBodyModel!]
  bodyWork: Boolean!
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  id: String!
  name: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
}

type VehicleTypeReferences {
  VehicleTypeContainsBody: [VehicleTypeContainsBodyModel!]
  bodyWork: Boolean!
  id: String!
  name: String!
}

input VehicleTypeUdateInput {
  bodyWork: Boolean
  body_work_id: [String!]
  created_by: String
  del_body_id: [String!]
  name: String
  updated_by: String!
}

input VehicleUpdateInput {
  color: String
  model_id: String
  plate: String
  renavam: String
  rntrc_expiration: String
  year: String
}