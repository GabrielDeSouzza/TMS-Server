# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AuthInput {
  email: String!
  password: String!
}

type AuthModel {
  email: String!
  id: String!
  name: String!
  token: String!
  username: String!
}

input CarrierCompanyInput {
  LegalPerson: LegalPersonInput
  legalPersonId: String
}

type CarrierCompanyModel {
  CreatedUser: UserModelRefereces!
  LegalPerson: LegalPersonModel!
  UpdatedUser: UserModelRefereces!
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  id: String!
  legalPersonId: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
}

input CarrierCompanyUpdateInput {
  LegalPerson: LegalPersonUpdateInput!
  legalPersonId: String
}

input CiotForLegalClientInput {
  ciot: String!
  emission_date: Timestamp!
  legal_contract_id: String!
}

type CiotForLegalClientModel {
  CreatedUser: UserModelRefereces!
  LegalClientContract: LegalContractModel!
  UpdatedUser: UserModelRefereces!
  ciot: String!
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  emission_date: Timestamp!
  id: String!
  legal_contract_id: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
}

input CiotForLegalClientUpdateInput {
  ciot: String
  emission_date: Timestamp
  legal_contract_id: String
}

type CompanyVehicleIModel {
  CarrierCompany: CarrierCompanyModel!
  Vehicle: VehicleCarModel!
  carrier_company_id: String!
  created_at: Timestamp!
  created_by: String!
  id: String!
  updated_at: Timestamp!
  updated_by: String!
  vehicle_id: String!
}

input CompanyVehicleInput {
  Vehicle: VehicleInput!
  carrier_company_id: String!
}

input CompanyVehicleUpdateInput {
  Vehicle: VehicleUpdateInput!
  carrier_company_id: String
}

input ContractOutsoucedDriverUpdateInput {
  cpf: String
  end_at: Timestamp
  id: String
  outsourced_driver_id: String
  situation: String
  start_at: Timestamp
  type: String
}

type ContractOutsourcedDriverRefencesModel {
  cpf: String!
  created_at: Timestamp!
  created_by: String!
  end_at: Timestamp!
  id: String!
  situation: String!
  start_at: Timestamp!
  type: String!
  updated_at: Timestamp!
  updated_by: String!
}

input ContractOutsourcedDriverReferecesInput {
  cpf: String!
  end_at: Timestamp!
  id: String
  situation: String!
  start_at: Timestamp!
  type: String!
}

input InvoiceForLegalClientInput {
  additional_data: String!
  digital_signature: String!
  emission_date: Timestamp!
  form_payment: String!
  invoice_taxes: Float!
  invoice_total: Float!
  legal_client_order_id: String!
  nature_invoice: String!
}

type InvoiceForLegalClientModel {
  CreatedUser: UserModelRefereces!
  LegalClientOrder: LegalClientOrderModel!
  UpdatedUser: UserModelRefereces!
  additional_data: String!
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  digital_signature: String!
  emission_date: Float!
  form_payment: String!
  id: String!
  invoice_taxes: Float!
  invoice_total: Float!
  legal_client_order_id: String!
  nature_invoice: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
}

input InvoiceForLegalClientUpdateInput {
  additional_data: String
  digital_signature: String
  emission_date: Timestamp
  form_payment: String
  invoice_taxes: Float
  invoice_total: Float
  legal_client_order_id: String
  nature_invoice: String
}

input LegalClientInput {
  LegalPerson: LegalPersonInput
  branch: String!
  legal_person_id: String
}

input LegalClientMerchandiseInput {
  amount: Int!
  codMerchandise: String!
  description: String!
  legalClientOrderId: String!
  mass: Float!
  value: Float!
  volume: Float!
}

type LegalClientMerchandiseModel {
  LegalClientOrder: LegalClientOrderModel!
  amount: Int!
  codMerchandise: String!
  description: String!
  id: String!
  legalClientOrderId: String!
  mass: Float!
  value: Float!
  volume: Float!
}

input LegalClientMerchandiseUpdateInput {
  amount: Int
  codMerchandise: String
  description: String
  legalClientOrderId: String
  mass: Float
  value: Float
  volume: Float
}

type LegalClientModel {
  CreatedUser: UserModelRefereces!
  LegalPerson: LegalPersonModel!
  Orders: [LegalClientOrderModel!]!
  UpdatedUser: UserModelRefereces!
  branch: String!
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  id: String!
  legal_person_id: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
}

input LegalClientOrderInput {
  legal_contract_id: String!
  order: String!
}

type LegalClientOrderModel {
  CreatedUser: UserModelRefereces!
  Invoices: [InvoiceForLegalClientModel!]!
  LegalClientMerchandise: [LegalClientMerchandiseModel!]!
  LegalContract: LegalContractModel!
  Merchandises: [LegalClientMerchandiseModel!]!
  UpdatedUser: UserModelRefereces!
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  id: String!
  legal_contract_id: String!
  order: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
}

input LegalClientOrderUpdateInput {
  legal_contract_id: String
  order: String
}

input LegalClientUpdateInput {
  LegalPerson: LegalPersonUpdateInput!
  branch: String
  legal_person_id: String
}

input LegalContractInput {
  carrier_company_id: String!
  contract_number: String!
  delivery_conditions: String!
  effective_date: Timestamp!
  legal_client_id: String!
  observations: String
}

type LegalContractModel {
  CarrierCompany: CarrierCompanyModel!
  CreatedUser: UserModelRefereces!
  LegalClient: LegalClientModel!
  UpdatedUser: UserModelRefereces!
  carrier_company_id: String!
  contract_number: String!
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  delivery_conditions: String!
  effective_date: Timestamp!
  id: String!
  legal_client_id: String!
  observations: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
}

input LegalContractUpdateInput {
  carrier_company_id: String
  contract_number: String
  delivery_conditions: String
  effective_date: Timestamp
  legal_client_id: String
  observations: String
}

input LegalPersonInput {
  address_number: String!
  city: String!
  cnpj: String!
  complement: String
  corporate_name: String!
  email: String!
  fantasy_name: String!
  first_phone: String!
  neighborhood: String!
  public_place: String!
  second_phone: String
  state_registration: String!
  third_phone: String
  uf: String!
}

type LegalPersonModel {
  address_number: String!
  city: String!
  complement: String
  corporate_name: String!
  created_at: Timestamp!
  email: String!
  fantasy_name: String!
  first_phone: String!
  id: String!
  neighborhood: String!
  public_place: String!
  second_phone: String
  state_registration: String!
  third_phone: String
  uf: String!
  updated_at: Timestamp!
}

input LegalPersonUpdateInput {
  address_number: String
  city: String
  cnpj: String
  complement: String
  corporate_name: String
  email: String
  fantasy_name: String
  first_phone: String
  neighborhood: String
  public_place: String
  second_phone: String
  state_registration: String
  third_phone: String
  uf: String
}

type Mutation {
  createCarrierCompany(carrierCompanyInput: CarrierCompanyInput!): CarrierCompanyModel!
  createCiotForLegalClient(ciotForLegalClientInput: CiotForLegalClientInput!): CiotForLegalClientModel!
  createCompanyVehicle(CompanyVehicleInput: CompanyVehicleInput!): CompanyVehicleIModel!
  createInvoiceForLegalClient(invoiceForLegalClientInput: InvoiceForLegalClientInput!): InvoiceForLegalClientModel!
  createLegalClient(legalclientInput: LegalClientInput!): LegalClientModel!
  createLegalClientMerchandise(legalClientMerchandiseInput: LegalClientMerchandiseInput!): LegalClientMerchandiseModel!
  createLegalClientOrder(legalClientOrderInput: LegalClientOrderInput!): LegalClientOrderModel!
  createLegalContract(legalContractInput: LegalContractInput!): LegalContractModel!
  createOutsourcedDriver(outsourcedDriver: OutsourcedDriverInput!): OutsourcedDriverModel!
  createOutsourcedTransportCompany(outsourcedTransportCompanyInput: OutsourcedTransportCompanyInput!): OutsourcedTransportCompanyModel!
  createOutsourcedTransportCompanyContract(outsourcedTransportCompanyContractInput: OutsourcedTransportCompanyContractInput!): OutsourcedTransportCompanyContractModel!
  createOutsourcedTransportVehicle(outsourcedTransportVehicleInput: OutsourcedTransportVehicleInput!): OutsourcedTransportVehicleModel!
  createOutsourcedVehicle(OutsourcedVehicleInput: OutsourcedVehicleInput!): OutsourcedVehicleIModel!
  createOwnDriver(ownDriverInput: OwnDriverInput!): OwnDriverModel!
  createUSer(createUserInput: UserInput!): UserModel!
  createVehicle(vehicleInput: VehicleInput!): VehicleCarModel!
  createVehicleBodywork(vehicleBodyworkInput: VehicleBodyworkInput!): VehicleBodyworkModel!
  createVehicleBrand(vehicleBrandInput: VehicleBrandInput!): VehicleBrandModel!
  createVehicleModel(vehicleModelInput: VehicleModelInput!): VehicleModelGraphql!
  createVehicleType(vehicleTypeCreate: VehicleTypeInput!): VehicleTypeModel!
  login(loginData: AuthInput!): AuthModel!
  updateCarriercompany(carrierCompanyInput: CarrierCompanyUpdateInput!, id: String!): CarrierCompanyModel!
  updateOutsourcedDriver(id: String!, outsourcedDriver: OutsourcedDriverUpdateInput!): OutsourcedDriverModel!
  updateOwnDriver(id: String!, ownDriverUpdate: OwnDriverUpdate!): OwnDriverModel!
  updateUser(id: String!, userUpdate: UserUpdateInput!): UserModel!
  updateVehicle(id: String!, vehicleInput: VehicleUpdateInput!): VehicleCarModel!
  updateVehicleBodywork(id: String!, vehicleBodyworkIUpdate: VehicleBodyworkUpdateInput!): VehicleBodyworkModel!
  updateciotForLegalClient(ciotForLegalClientInput: CiotForLegalClientUpdateInput!, id: String!): CiotForLegalClientModel!
  updatedCompanyVehicle(id: String!, outsourced: CompanyVehicleUpdateInput!): CompanyVehicleIModel!
  updatedOutsourcedVehicle(id: String!, outsourced: OutsourcedVehicleUpdateInput!): OutsourcedVehicleIModel!
  updatedVehicleBrand(id: String!, vehicleBrandUpdate: VehicleBrandUpdateInput!): VehicleBrandModel!
  updatedVehicleModel(id: String!, vehicleModelUpdate: VehicleModelUpdateInput!): VehicleModelGraphql!
  updatedVehicleType(id: String!, vehicleTypeInput: VehicleTypeUpdateInput!): VehicleTypeModel!
  updateinvoiceForLegalClient(id: String!, invoiceForLegalClientInput: InvoiceForLegalClientUpdateInput!): InvoiceForLegalClientModel!
  updatelegalClientMerchandise(id: String!, legalClientMerchandiseInput: LegalClientMerchandiseUpdateInput!): LegalClientMerchandiseModel!
  updatelegalClientOrder(id: String!, legalClientOrderInput: LegalClientOrderUpdateInput!): LegalClientOrderModel!
  updatelegalContract(id: String!, legalContractInput: LegalContractUpdateInput!): LegalContractModel!
  updatelegalclient(id: String!, legalclientInput: LegalClientUpdateInput!): LegalClientModel!
  updateoutsourcedTransportCompany(id: String!, outsourcedTransportCompanyInput: OutsourcedTransportCompanyUpdateInput!): OutsourcedTransportCompanyModel!
  updateoutsourcedTransportCompanyContract(id: String!, outsourcedTransportCompanyContractInput: OutsourcedTransportCompanyContractUpdateInput!): OutsourcedTransportCompanyContractModel!
  updateoutsourcedTransportVehicle(id: String!, outsourcedTransportVehicleInput: OutsourcedTransportVehicleUpdateInput!): OutsourcedTransportVehicleModel!
}

input NaturalPersonInput {
  address_number: String!
  cep: String!
  city: String!
  complement: String
  cpf: String!
  date_birth: Timestamp!
  email: String!
  first_phone: String!
  gender: String!
  name: String!
  nationality: String!
  neighborhood: String!
  public_place: String!
  rg: String!
  second_phone: String
  third_phone: String
  uf: String!
}

type NaturalPersonModel {
  address_number: String!
  cep: String!
  city: String!
  complement: String
  cpf: String!
  date_birth: Timestamp!
  email: String!
  first_phone: String!
  gender: String!
  id: String!
  name: String!
  nationality: String!
  neighborhood: String!
  public_place: String!
  rg: String!
  second_phone: String
  third_phone: String
  uf: String!
}

input NaturalPersonUpdate {
  address_number: String
  cep: String
  city: String
  complement: String
  cpf: String
  date_birth: Timestamp
  email: String
  first_phone: String
  gender: String
  name: String
  nationality: String
  neighborhood: String
  public_place: String
  rg: String
  second_phone: String
  third_phone: String
  uf: String
}

input OutsourcedDriverInput {
  ContractOutsourcedDriver: ContractOutsourcedDriverReferecesInput!
  NaturalPerson: NaturalPersonInput!
  OutsourcedVehicle: OutsourcedVehicleInput
  cnh: String!
  cnh_category: String!
  cnh_expiration: Timestamp!
  company_vehicle: Boolean!
  course_mopp: Boolean!
}

type OutsourcedDriverModel {
  ContractOutsourcedDriver: [ContractOutsourcedDriverRefencesModel!]!
  CreatedUser: UserModelRefereces!
  NaturalPerson: NaturalPersonModel!
  OutsourcedVehicle: OutsourcedVehicleIModel
  UpdatedUser: UserModelRefereces!
  cnh: String!
  cnh_category: String!
  cnh_expiration: Timestamp!
  company_vehicle: Boolean!
  course_mopp: Boolean!
  createdUser: UserModelRefereces!
  created_by: String!
  id: String!
  natural_person_id: String!
  outsourced_vehicle_id: String!
  updatedUser: UserModelRefereces!
  updated_by: String!
}

input OutsourcedDriverUpdateInput {
  ContractOutsourcedDriver: ContractOutsoucedDriverUpdateInput
  NaturalPerson: NaturalPersonUpdate
  OutsourcedVehicle: OutsourcedVehicleUpdateInput
  cnh: String
  cnh_category: String
  cnh_expiration: Timestamp
  company_vehicle: Boolean
  course_mopp: Boolean
}

input OutsourcedTransportCompanyContractInput {
  carrierCompanyId: String!
  legalClientOrderId: String!
  outSourcedTransportCompanyId: String!
}

type OutsourcedTransportCompanyContractModel {
  CarrierCompany: CarrierCompanyModel!
  CreatedUser: UserModelRefereces!
  LegalClientOrder: LegalClientOrderModel!
  OutsourcedTransportCompany: OutsourcedTransportCompanyModel!
  UpdatedUser: UserModelRefereces!
  carrierCompanyId: String!
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  id: String!
  legalClientOrderId: String!
  outSourcedTransportCompanyId: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
}

input OutsourcedTransportCompanyContractUpdateInput {
  carrierCompanyId: String
  legalClientOrderId: String
  outSourcedTransportCompanyId: String
}

input OutsourcedTransportCompanyInput {
  LegalPerson: LegalPersonInput
  legalPersonId: String
}

type OutsourcedTransportCompanyModel {
  CreatedUser: UserModelRefereces!
  LegalPerson: LegalPersonModel!
  UpdatedUser: UserModelRefereces!
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  id: String!
  legalPersonId: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
}

input OutsourcedTransportCompanyUpdateInput {
  legalPersonId: String
}

input OutsourcedTransportVehicleInput {
  Vehicle: VehicleInput!
  outsourced_company_id: String!
}

type OutsourcedTransportVehicleModel {
  CreatedUser: UserModelRefereces!
  OutsourcedTransportCompany: OutsourcedTransportCompanyModel!
  UpdatedUser: UserModelRefereces!
  Vehicle: VehicleCarModel!
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  id: String!
  outsourced_company_id: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
  vehicle_id: String!
}

input OutsourcedTransportVehicleUpdateInput {
  Vehicle: VehicleUpdateInput
  outsourced_company_id: String
}

type OutsourcedVehicleIModel {
  CreatedUser: UserModelRefereces!
  UpdatedUser: UserModelRefereces!
  Vehicle: VehicleCarModel!
  created_at: Timestamp!
  id: String!
  updated_at: Timestamp!
  vehicle_id: String!
}

input OutsourcedVehicleInput {
  Vehicle: VehicleInput!
}

input OutsourcedVehicleUpdateInput {
  Vehicle: VehicleUpdateInput
}

input OwnDriverInput {
  NaturalPerson: NaturalPersonInput!
  cnh: String!
  cnh_category: String!
  cnh_expiration: Timestamp!
  company_vehicle: Boolean!
  course_mopp: Boolean!
}

type OwnDriverModel {
  NaturalPerson: NaturalPersonModel!
  cnh: String!
  cnh_category: String!
  cnh_expiration: Timestamp!
  company_vehicle: Boolean!
  course_mopp: Boolean!
  cpf: String!
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  id: String!
  natural_person_id: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
}

input OwnDriverUpdate {
  NaturalPersonUpdate: NaturalPersonUpdate!
  cnh: String
  cnh_category: String
  cnh_expiration: Timestamp
  company_vehicle: Boolean
  course_mopp: Boolean
}

type Query {
  getAllCarrierCompany: [CarrierCompanyModel!]
  getAllCiotForLegalClient: [CiotForLegalClientModel!]
  getAllCompanyVehicle: [CompanyVehicleIModel!]!
  getAllInvoiceForLegalClient: [InvoiceForLegalClientModel!]
  getAllLegalClient: [LegalClientModel!]
  getAllLegalClientMerchandise: [LegalClientMerchandiseModel!]
  getAllLegalClientOrder: [LegalClientOrderModel!]
  getAllLegalContract: [LegalContractModel!]
  getAllOutsourcedDriver: [OutsourcedDriverModel!]!
  getAllOutsourcedTransportCompany: [OutsourcedTransportCompanyModel!]
  getAllOutsourcedTransportCompanyContract: [OutsourcedTransportCompanyContractModel!]
  getAllOutsourcedTransportVehicle: [OutsourcedTransportVehicleModel!]
  getAllOutsourcedVehicle: [OutsourcedVehicleIModel!]!
  getAllOwnDriver: [OwnDriverModel!]!
  getAllVehicle: [VehicleCarModel!]!
  getAllVehicleBodywork: [VehicleBodyworkModel!]
  getAllVehicleBrand: [VehicleBrandModel!]!
  getAllVehicleModel: [VehicleModelGraphql!]
  getAllVehicleTypes: [VehicleTypeModel!]
  getCarrierCompanyModel(id: String!): CarrierCompanyModel!
  getCiotForLegalClientModel(id: String!): CiotForLegalClientModel!
  getCompanyVehicle(id: String!): CompanyVehicleIModel!
  getInvoiceForLegalClientModel(id: String!): InvoiceForLegalClientModel!
  getLegalClientMerchandiseModel(id: String!): LegalClientMerchandiseModel!
  getLegalClientModel(id: String!): LegalClientModel!
  getLegalClientOrderModel(id: String!): LegalClientOrderModel
  getLegalContractModel(contractNumber: String, id: String): LegalContractModel!
  getOutsourcedDriver(id: String!): OutsourcedDriverModel!
  getOutsourcedTransportCompanyContractModel(id: String!): OutsourcedTransportCompanyContractModel!
  getOutsourcedTransportCompanyModel(id: String!): OutsourcedTransportCompanyModel!
  getOutsourcedTransportVehicleModel(id: String!): OutsourcedTransportVehicleModel!
  getOutsourcedVehicle(id: String!): OutsourcedVehicleIModel!
  getOwnDriver(id: String!): OwnDriverModel!
  getVehicle(id: String, plate: String): VehicleCarModel!
  getVehicleBodyworkModel(id: String!): VehicleBodyworkModel!
  getVehicleBrand(id: String!): VehicleBrandModel!
  getVehicleModel(id: String!): VehicleModelGraphql!
  getVehicleType(id: String!): VehicleTypeModel!
  user(email: String, id: String): UserModel!
  users: [UserModel!]!
}

enum ROLE {
  ADMIN
  CLIENT
  USER
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

input UserInput {
  email: String!
  name: String!
  password: String!
  role: ROLE!
  username: String!
}

type UserModel {
  created_at: Timestamp
  email: String!
  id: String!
  name: String!
  password: String!
  role: ROLE!
  updated_at: Timestamp
  username: String!
}

type UserModelRefereces {
  email: String!
  id: String!
  name: String!
  username: String!
}

input UserUpdateInput {
  email: String
  name: String
  password: String
  role: ROLE
  username: String
}

input VehicleBodyworkInput {
  axles: Int!
  mass: Float!
  name: String!
  volume: Float!
}

type VehicleBodyworkModel {
  CreatedUser: UserModelRefereces!
  UpdatedUser: UserModelRefereces!
  VehicleTypeContainsBody: [VehicleTypeContainsBodyModel!]
  axles: Float!
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  id: String!
  mass: Float!
  name: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
  volume: Float!
}

type VehicleBodyworkModelReferences {
  axles: Float!
  id: String!
  mass: Float!
  name: String!
  volume: Float!
}

input VehicleBodyworkUpdateInput {
  axles: Int
  mass: Float
  name: String
  volume: Float
}

input VehicleBrandInput {
  name: String!
}

type VehicleBrandModel {
  VehicleModels: VehicleModelGraphql
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  id: String!
  name: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
}

type VehicleBrandReferences {
  id: String!
  name: String!
}

input VehicleBrandUpdateInput {
  name: String
}

type VehicleCarModel {
  VehicleBrand: VehicleBrandReferences!
  VehicleModel: VehicleModelReferences!
  VehicleType: VehicleTypeReferences!
  color: String!
  createdUser: UserModelRefereces!
  id: String!
  model_id: String!
  plate: String!
  renavam: String!
  rntrc_expiration: String!
  updatedUser: UserModelRefereces!
  year: String!
}

input VehicleInput {
  color: String!
  model_id: String!
  plate: String!
  renavam: String!
  rntrc_expiration: String!
  year: String!
}

type VehicleModelGraphql {
  VehicleBrand: VehicleBrandReferences!
  VehicleType: VehicleTypeModel!
  axles: Int!
  brand_id: String!
  capacity_max: Float!
  capacity_per_axle: Int!
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  id: String!
  name: String!
  type_id: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
  weight: Float!
}

input VehicleModelInput {
  axles: Float!
  brand_id: String!
  capacity_max: Float!
  capacity_per_axle: Int!
  name: String!
  type_id: String!
  weight: Float!
}

type VehicleModelReferences {
  axles: Int!
  brand_id: String!
  capacity_max: Float!
  capacity_per_axle: Int!
  id: String!
  name: String!
  type_id: String!
  weight: Float!
}

input VehicleModelUpdateInput {
  axles: Float
  brand_id: String
  capacity_max: Float
  capacity_per_axle: Int
  name: String
  type_id: String
  weight: Float
}

type VehicleTypeContainsBodyModel {
  VehicleBodywork: [VehicleBodyworkModelReferences!]!
  created_at: Timestamp!
  created_by: String!
  id: String!
  updated_at: Timestamp!
  updated_by: String!
  vehicle_bodywork_id: String!
  vehicle_type_id: String!
}

input VehicleTypeInput {
  bodyWork: Boolean!
  body_work_id: [String!]
  name: String!
}

type VehicleTypeModel {
  VehicleModels: VehicleModelGraphql
  VehicleTypeContainsBody: [VehicleTypeContainsBodyModel!]
  bodyWork: Boolean!
  createdUser: UserModelRefereces!
  created_at: Timestamp!
  created_by: String!
  id: String!
  name: String!
  updatedUser: UserModelRefereces!
  updated_at: Timestamp!
  updated_by: String!
}

type VehicleTypeReferences {
  VehicleTypeContainsBody: [VehicleTypeContainsBodyModel!]
  bodyWork: Boolean!
  id: String!
  name: String!
}

input VehicleTypeUpdateInput {
  bodyWork: Boolean
  body_work_id: [String!]
  del_body_id: [String!]
  name: String
  updated_by: String!
}

input VehicleUpdateInput {
  color: String
  model_id: String
  plate: String
  renavam: String
  rntrc_expiration: String
  year: String
}